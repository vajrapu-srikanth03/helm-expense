apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: expense
  labels:
    tier: app-tier
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: backend
      tier: app
      project: expense
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: backend
        tier: app
        project: expense
    spec:
      # affinity:
      #   podAntiAffinity:
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #     - podAffinityTerm:
      #         labelSelector:
      #           matchExpressions:
      #           - key: app
      #             operator: In
      #             values:
      #             - backend
      #         topologyKey: kubernetes.io/hostname
      #       weight: 100  
      serviceAccount: backend
      serviceAccountName: backend
      terminationGracePeriodSeconds: 10

      initContainers:
      - name: mysql-check
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup mysql; do echo waiting for mysqlservice; sleep 2; done"]
      containers:
      - name: backend
        image: srikanthhg/backend:{{ .Values.deployment.imageVersion }}
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: backend
        resources:
          requests:
            cpu:  100m
            memory: 128Mi
          # limits is greater than or equal to requests
          limits:
            cpu: 100m
            memory: 128Mi
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        # securityContext:
        #   allowPrivilegeEscalation: false
        #   readOnlyRootFilesystem: true
        #   fsGroup: 999
        #   runAsGroup: 999
        #   runAsNonRoot: true
        #   runAsUser: 999
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File